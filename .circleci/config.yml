version: 2
jobs:
  build:
    docker:
      - image: docker/compose:1.24.1
    working_directory: ~/twks
    steps:
      - checkout
      - restore_cache:
          keys:
            - m2-v1-{{ checksum "java/pom.xml" }}-{{ checksum "java/abc/pom.xml" }}-{{ checksum "java/api/pom.xml" }}-{{ checksum "java/cli/pom.xml" }}-{{ checksum "java/client/pom.xml" }}-{{ checksum "java/examples/client/pom.xml" }}-{{ checksum "java/ext/pom.xml" }}-{{ checksum "java/factory/pom.xml" }}-{{ checksum "java/nanopub/pom.xml" }}-{{ checksum "java/server/pom.xml" }}-{{ checksum "java/tdb/pom.xml" }}-{{ checksum "java/test/pom.xml" }}-{{ checksum "java/uri/pom.xml" }}-{{ checksum "java/vocabulary/pom.xml" }}
            - twks-{{ checksum "java/pom.xml" }}-{{ checksum "java/abc/pom.xml" }}-{{ checksum "java/api/pom.xml" }}-{{ checksum "java/cli/pom.xml" }}-{{ checksum "java/client/pom.xml" }}-{{ checksum "java/examples/client/pom.xml" }}-{{ checksum "java/ext/pom.xml" }}-{{ checksum "java/factory/pom.xml" }}-{{ checksum "java/nanopub/pom.xml" }}-{{ checksum "java/server/pom.xml" }}-{{ checksum "java/tdb/pom.xml" }}-{{ checksum "java/test/pom.xml" }}-{{ checksum "java/uri/pom.xml" }}-{{ checksum "java/vocabulary/pom.xml" }}
      - run:
          name: Move old ~/.m2 cache to right path if exists
          command: mv -n /home/circleci/.m2 ~/ || true
      - run:
          name: Create ~/.m2 if it doesn't exist
          command: mkdir -p ~/.m2
      #      - run:
      #          name: Count files in ~/.m2
      #          command: find ~/.m2 | wc
      - setup_remote_docker
      - run:
          name: Copy ~/.m2 directory to java/ temporarily so that it will be speed up Docker image builds
          command: cp -p -R ~/.m2 java/
      - run:
          name: Build Docker images
          command: cd docker && docker-compose build
      - run:
          name: Run the server
          command: |
            cd docker
            docker-compose up -d twks-java twks-py twks-server
            docker exec twks-py bash -c "curl --retry-connrefused --retry 90 --retry-delay 1 http://twks-server:8080"
      # Cache ~/.m2 before building Java examples, since that installs our libraries into ~/.m2
      - run:
          name: Copy ~/.m2 directory out of container so that it can be cached
          command: |
            rm -fr ~/.m2
            docker cp twks-java:/root/.m2 ~/
      #            find ~/.m2 | wc
      - save_cache:
          key: m2-v1-{{ checksum "java/pom.xml" }}-{{ checksum "java/abc/pom.xml" }}-{{ checksum "java/api/pom.xml" }}-{{ checksum "java/cli/pom.xml" }}-{{ checksum "java/client/pom.xml" }}-{{ checksum "java/examples/client/pom.xml" }}-{{ checksum "java/ext/pom.xml" }}-{{ checksum "java/factory/pom.xml" }}-{{ checksum "java/nanopub/pom.xml" }}-{{ checksum "java/server/pom.xml" }}-{{ checksum "java/tdb/pom.xml" }}-{{ checksum "java/test/pom.xml" }}-{{ checksum "java/uri/pom.xml" }}-{{ checksum "java/vocabulary/pom.xml" }}
          paths:
            - ~/.m2
      - run:
          name: Run Java tests
          command: |
            docker cp .circleci/test-java.sh twks-java:/twks/java
            docker exec twks-java bash -c "/twks/java/test-java.sh"
            mkdir -p test-results
            docker cp twks-java:/twks/java/surefire-reports.tar.bz2 test-results && cd test-results && tar jxf surefire-reports.tar.bz2 && mv surefire-reports java && rm surefire-reports.tar.bz2
      - run:
          name: Build Java examples
          command: |
            docker cp .circleci/build-java-examples.sh twks-java:/twks/java
            docker exec twks-java bash -c "/twks/java/build-java-examples.sh"
      - run:
          name: Run Python client tests
          command: |
            mkdir -p test-results/py
            docker exec twks-py bash -c "mkdir -p ../test-results/py && cd tests && TWKS_SERVER_BASE_URL=\"http://twks-server:8080\" pytest --junitxml=../../test-results/py/junit.xml"
            docker cp twks-py:/twks/test-results/py/junit.xml test-results/py
      #      - store_artifacts:
      #          path: test-results
      - store_test_results:
          path: test-results
      - run:
          name: Generate Java site (master only)
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              docker cp .circleci/report-java.sh twks-java:/twks/java
              docker exec twks-java bash -c "/twks/java/report-java.sh"
              docker cp twks-java:/twks/java/site.tar.bz2 java/
            fi
      - store_artifacts:
          path: java/site.tar.bz2
      - run:
          name: Push Docker images (master only)
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              docker login -u $DOCKER_USER -p $DOCKER_PASS
              cd docker && docker-compose push twks-cli twks-server
            fi
      - run:
          name: Push Java artifacts (master only)
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              docker cp ~/twks/.circleci/maven-settings.xml twks-java:/root/.m2/settings.xml
              docker exec twks-java bash -c "echo -e \"$OSSRH_GPG_KEY\" | gpg --import && cd /twks/java && mvn -q -P release -Dmaven.test.skip=true deploy"
            fi
  lint_md:
    docker:
      - image: circleci/ruby:2.4-node
    working_directory: ~/twks
    steps:
      - checkout
      - run: .circleci/lint-md.sh
      - store_artifacts:
          path: lint-results
workflows:
  version: 2
  build:
    jobs:
      - build
      - lint_md
